{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { USER_LOGOUT, USER_LOGIN_STARTED, USER_LOGIN_SUCCEEDED, USER_LOGIN_FAILED, USER_REGISTER_STARTED, USER_REGISTER_SUCCEEDED, USER_REGISTER_FAILED } from './types';\nconst initialState = {\n  token: '',\n  username: '',\n  firstName: '',\n  lastName: '',\n  email: '',\n  phoneNumber: '',\n  didRegisterSuccessfully: false\n};\n\nconst user = (state = initialState, action) => {\n  const {\n    payload\n  } = action;\n\n  switch (action.type) {\n    case HYDRATE:\n      // required by next-redux-wrapper\n      return _objectSpread({}, state);\n\n    case USER_LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        initialState\n      });\n\n    case USER_LOGIN_STARTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        didRegisterSuccessfully: false\n      });\n\n    case USER_LOGIN_SUCCEEDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        token: payload.data.token,\n        username: payload.data.username,\n        firstName: payload.data.first_name,\n        lastName: payload.data.last_name,\n        email: payload.data.email,\n        id: payload.data.id,\n        phoneNumber: payload.data.phone,\n        isLoading: false\n      });\n\n    case USER_LOGIN_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        error: {\n          user: payload // TODO check\n\n        }\n      });\n\n    case USER_REGISTER_STARTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true\n      });\n\n    case USER_REGISTER_SUCCEEDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        didRegisterSuccessfully: true\n      });\n\n    case USER_REGISTER_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        error: {\n          user: payload // TODO check\n\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":null,"metadata":{},"sourceType":"module"}