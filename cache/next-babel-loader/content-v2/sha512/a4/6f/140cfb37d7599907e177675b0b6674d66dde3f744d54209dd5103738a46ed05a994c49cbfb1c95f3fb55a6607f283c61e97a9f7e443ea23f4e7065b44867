{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport CarrierListing from '../../molecules/CarrierListing';\nimport PrimaryButton from '../../atoms/buttons/PrimaryButton';\nimport PageNavigation from '../../molecules/PageNavigation';\nconst ButtonContainer = styled.div.withConfig({\n  displayName: \"CarrierList__ButtonContainer\",\n  componentId: \"sc-1f3c83l-0\"\n})([\"display:flex;justify-content:center;\"]);\n\nconst transformCarrier = ({\n  first_name,\n  last_name,\n  email,\n  image\n}) => ({\n  carrierFirstName: first_name,\n  carrierLastName: last_name,\n  carrierEmail: email,\n  carrierPhotoUrl: image\n});\n\nconst CarrierList = ({\n  getCarrierList,\n  carrierList,\n  updateCarrier,\n  showAddCarrierModal,\n  showUpdateCarrierModal,\n  setShowUpdateCarrierModal,\n  token,\n  setShowAddCarrierModal,\n  searchText,\n  meta = {}\n}) => {\n  const {\n    current_page,\n    last_page\n  } = meta;\n  const {\n    0: activePage,\n    1: setActivePage\n  } = useState(current_page || 1);\n  useEffect(() => {\n    getCarrierList({\n      token,\n      page: activePage\n    });\n  }, [activePage]);\n  useEffect(() => {\n    getCarrierList({\n      token,\n      page: activePage\n    });\n  }, [showAddCarrierModal, showUpdateCarrierModal, JSON.stringify(carrierList)]);\n\n  const getCarrierFullName = (first, last) => `${first} ${last}`;\n\n  const filteredCarrierList = !!searchText ? carrierList.filter(carrier => getCarrierFullName(carrier.first_name, carrier.last_name).toUpperCase().includes(searchText.toUpperCase())) : carrierList;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [filteredCarrierList.map(carrier => {\n      const transformedCarrier = transformCarrier(carrier);\n      return /*#__PURE__*/_jsx(CarrierListing, _objectSpread({\n        carrierId: carrier.id,\n        setShowUpdateCarrierModal: setShowUpdateCarrierModal,\n        updateCarrier: updateCarrier\n      }, transformedCarrier), carrier.id);\n    }), /*#__PURE__*/_jsx(PageNavigation, {\n      activePage: activePage,\n      onClick: e => setActivePage(parseInt(e.target.textContent), 10),\n      lastPage: last_page\n    }), /*#__PURE__*/_jsx(ButtonContainer, {\n      children: /*#__PURE__*/_jsx(PrimaryButton, {\n        buttonText: \"Add a carrier\",\n        onClick: () => setShowAddCarrierModal(true)\n      })\n    })]\n  });\n};\n\nexport default CarrierList;","map":null,"metadata":{},"sourceType":"module"}