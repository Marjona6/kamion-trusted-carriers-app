{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nimport { Helmet } from 'react-helmet'; // from https://github.com/zeit/next.js/edit/canary/examples/with-react-helmet/pages/_document.js\n\nexport default class extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles( /*#__PURE__*/_jsx(App, _objectSpread({}, props)))\n      });\n\n      const documentProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, documentProps), {}, {\n        helmet: Helmet.renderStatic(),\n        styles: /*#__PURE__*/_jsxs(_Fragment, {\n          children: [documentProps.styles, sheet.getStyleElement()]\n        })\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  get helmetHtmlAttrComponents() {\n    return this.props.helmet.htmlAttributes.toComponent();\n  }\n\n  get helmetBodyAttrComponents() {\n    return this.props.helmet.bodyAttributes.toComponent();\n  }\n\n  get helmetHeadComponents() {\n    return Object.keys(this.props.helmet).filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes').map(el => this.props.helmet[el].toComponent());\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Html, _objectSpread(_objectSpread({}, this.helmetHtmlAttrComponents), {}, {\n      children: [/*#__PURE__*/_jsxs(Head, {\n        children: [this.helmetJsx, this.helmetHeadComponents]\n      }), /*#__PURE__*/_jsxs(\"body\", _objectSpread(_objectSpread({}, this.helmetBodyAttrComponents), {}, {\n        children: [/*#__PURE__*/_jsx(Main, {}), /*#__PURE__*/_jsx(NextScript, {})]\n      }))]\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}