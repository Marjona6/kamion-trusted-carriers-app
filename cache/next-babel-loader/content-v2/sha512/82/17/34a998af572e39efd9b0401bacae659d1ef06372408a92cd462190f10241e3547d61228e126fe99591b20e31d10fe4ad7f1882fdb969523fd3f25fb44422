{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCarriersTask),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addCarrierTask),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateCarrierTask),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetCarriers),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddCarrier),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchUpdateCarrier),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_CARRIER_STARTED, UPDATE_CARRIER_STARTED, GET_CARRIER_LIST_STARTED } from './types';\nimport { addCarrierError, addCarrierSuccess, getCarrierListError, getCarrierListSuccess, updateCarrierError, updateCarrierSuccess } from './actions';\nimport { BASE_URL } from '../../config';\n\nfunction getCarriersTask(action) {\n  var payload, token, _payload$page, page, response;\n\n  return _regeneratorRuntime.wrap(function getCarriersTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = action.payload;\n          token = payload.token, _payload$page = payload.page, page = _payload$page === void 0 ? 1 : _payload$page;\n          _context.prev = 2;\n          _context.next = 5;\n          return call(axios.get, \"\".concat(BASE_URL, \"/api/shipper/carrier?page=\").concat(page), {\n            headers: {\n              Authorization: \"Bearer \".concat(token)\n            }\n          });\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return put(getCarrierListSuccess(response.data));\n\n        case 8:\n          _context.next = 15;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](2);\n          console.log(_context.t0);\n          _context.next = 15;\n          return put(getCarrierListError(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 10]]);\n}\n\nfunction addCarrierTask(action) {\n  var payload, token, formData, response, data;\n  return _regeneratorRuntime.wrap(function addCarrierTask$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = action.payload;\n          token = payload.token, formData = payload.formData;\n          _context2.prev = 2;\n          _context2.next = 5;\n          return call(axios.post, \"\".concat(BASE_URL, \"/api/shipper/carrier\"), formData, {\n            headers: {\n              Authorization: \"Bearer \".concat(token),\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n\n        case 5:\n          response = _context2.sent;\n          data = response.data;\n          _context2.next = 9;\n          return put(addCarrierSuccess(data));\n\n        case 9:\n          _context2.next = 16;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log(_context2.t0);\n          _context2.next = 16;\n          return put(addCarrierError(_context2.t0));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 11]]);\n}\n\nfunction updateCarrierTask(action) {\n  var payload, token, formData, carrierId, response, data;\n  return _regeneratorRuntime.wrap(function updateCarrierTask$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = action.payload;\n          token = payload.token, formData = payload.formData, carrierId = payload.carrierId;\n          _context3.prev = 2;\n          _context3.next = 5;\n          return call(axios.post, \"\".concat(BASE_URL, \"/api/shipper/update-carrier/\").concat(carrierId), formData, {\n            headers: {\n              Authorization: \"Bearer \".concat(token),\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n\n        case 5:\n          response = _context3.sent;\n          data = response.data;\n          _context3.next = 9;\n          return put(updateCarrierSuccess(data));\n\n        case 9:\n          _context3.next = 16;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](2);\n          console.log(_context3.t0);\n          _context3.next = 16;\n          return put(updateCarrierError(_context3.t0));\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[2, 11]]);\n}\n\nfunction watchGetCarriers() {\n  return _regeneratorRuntime.wrap(function watchGetCarriers$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(GET_CARRIER_LIST_STARTED, getCarriersTask);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchAddCarrier() {\n  return _regeneratorRuntime.wrap(function watchAddCarrier$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(ADD_CARRIER_STARTED, addCarrierTask);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchUpdateCarrier() {\n  return _regeneratorRuntime.wrap(function watchUpdateCarrier$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(UPDATE_CARRIER_STARTED, updateCarrierTask);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([watchGetCarriers(), watchAddCarrier(), watchUpdateCarrier()]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":null,"metadata":{},"sourceType":"module"}