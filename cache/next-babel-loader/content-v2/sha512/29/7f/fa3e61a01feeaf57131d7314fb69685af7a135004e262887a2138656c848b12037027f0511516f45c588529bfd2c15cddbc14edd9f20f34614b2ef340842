{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loginUserTask),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(registerUserTask),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logoutUserTask),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoginUser),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegisterUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogoutUser),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(saga);\n\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Cookies from 'universal-cookie';\nimport get from 'lodash/get';\nimport { USER_LOGIN_STARTED, USER_REGISTER_STARTED, USER_LOGOUT } from './types';\nimport { loginSuccess, loginError, registerSuccess, registerError } from './actions';\nimport { BASE_URL } from '../../config';\nvar cookies = new Cookies();\n\nfunction loginUserTask(action) {\n  var payload, username, password, response, data;\n  return _regeneratorRuntime.wrap(function loginUserTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = action.payload;\n          username = payload.username, password = payload.password;\n          _context.prev = 2;\n          _context.next = 5;\n          return call(axios.post, \"\".concat(BASE_URL, \"/api/shipper/login\"), {\n            username: username,\n            password: password\n          });\n\n        case 5:\n          response = _context.sent;\n          data = response.data;\n          _context.next = 9;\n          return put(loginSuccess(data));\n\n        case 9:\n          cookies.set('kamionTrustedCarriersApp', get(data, 'data.token'), {\n            path: '/'\n          });\n          Router.push({\n            pathname: '/list'\n          });\n          _context.next = 18;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n          _context.next = 17;\n          return put(loginError(_context.t0));\n\n        case 17:\n          console.log({\n            e: _context.t0\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 13]]);\n}\n\nfunction registerUserTask(action) {\n  var payload, username, password, first_name, last_name, phone, email, response, data;\n  return _regeneratorRuntime.wrap(function registerUserTask$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = action.payload;\n          username = payload.username, password = payload.password, first_name = payload.first_name, last_name = payload.last_name, phone = payload.phone, email = payload.email;\n          _context2.prev = 2;\n          _context2.next = 5;\n          return call(axios.post, \"\".concat(BASE_URL, \"/api/shipper/register\"), {\n            username: username,\n            password: password,\n            first_name: first_name,\n            last_name: last_name,\n            phone: phone,\n            email: email\n          });\n\n        case 5:\n          response = _context2.sent;\n          data = response.data;\n          _context2.next = 9;\n          return put(registerSuccess(data));\n\n        case 9:\n          _context2.next = 16;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](2);\n          _context2.next = 15;\n          return put(registerError(_context2.t0));\n\n        case 15:\n          console.log({\n            e: _context2.t0\n          });\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[2, 11]]);\n}\n\nfunction logoutUserTask() {\n  return _regeneratorRuntime.wrap(function logoutUserTask$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return cookies.remove('kamionTrustedCarriersApp');\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLoginUser() {\n  return _regeneratorRuntime.wrap(function watchLoginUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(USER_LOGIN_STARTED, loginUserTask);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchRegisterUser() {\n  return _regeneratorRuntime.wrap(function watchRegisterUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(USER_REGISTER_STARTED, registerUserTask);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogoutUser() {\n  return _regeneratorRuntime.wrap(function watchLogoutUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(USER_LOGOUT, logoutUserTask);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function saga() {\n  return _regeneratorRuntime.wrap(function saga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([watchLoginUser(), watchRegisterUser(), watchLogoutUser()]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":null,"metadata":{},"sourceType":"module"}