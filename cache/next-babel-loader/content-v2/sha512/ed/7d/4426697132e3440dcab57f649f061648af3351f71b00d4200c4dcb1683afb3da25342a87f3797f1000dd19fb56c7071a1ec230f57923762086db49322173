{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport Cookies from 'universal-cookie';\nimport get from 'lodash/get';\nimport { USER_LOGIN_STARTED, USER_REGISTER_STARTED, USER_LOGOUT } from './types';\nimport { loginSuccess, loginError, registerSuccess, registerError } from './actions';\nimport { BASE_URL } from '../../config';\nconst cookies = new Cookies();\n\nfunction* loginUserTask(action) {\n  const {\n    payload\n  } = action;\n  const {\n    username,\n    password\n  } = payload;\n\n  try {\n    const response = yield call(axios.post, `${BASE_URL}/api/shipper/login`, {\n      username,\n      password\n    });\n    const {\n      data\n    } = response;\n    yield put(loginSuccess(data));\n    cookies.set('kamionTrustedCarriersApp', get(data, 'data.token'), {\n      path: '/'\n    });\n    Router.push({\n      pathname: '/list'\n    });\n  } catch (e) {\n    yield put(loginError(e));\n    console.log({\n      e\n    });\n  }\n}\n\nfunction* registerUserTask(action) {\n  const {\n    payload\n  } = action;\n  const {\n    username,\n    password,\n    first_name,\n    last_name,\n    phone,\n    email\n  } = payload;\n\n  try {\n    const response = yield call(axios.post, `${BASE_URL}/api/shipper/register`, {\n      username,\n      password,\n      first_name,\n      last_name,\n      phone,\n      email\n    });\n    const {\n      data\n    } = response;\n    yield put(registerSuccess(data));\n  } catch (e) {\n    yield put(registerError(e));\n    console.log({\n      e\n    });\n  }\n}\n\nfunction* logoutUserTask() {\n  yield cookies.remove('kamionTrustedCarriersApp');\n}\n\nfunction* watchLoginUser() {\n  yield takeLatest(USER_LOGIN_STARTED, loginUserTask);\n}\n\nfunction* watchRegisterUser() {\n  yield takeLatest(USER_REGISTER_STARTED, registerUserTask);\n}\n\nfunction* watchLogoutUser() {\n  yield takeLatest(USER_LOGOUT, logoutUserTask);\n}\n\nexport default function* saga() {\n  yield all([watchLoginUser(), watchRegisterUser(), watchLogoutUser()]);\n}","map":null,"metadata":{},"sourceType":"module"}